function w = importWater(fileName,timeSpan)
% importWater imports and processes hot water withdrawal data from a CSV
% file generated by Hendron's NREL tool.
%
% Input:
%   fileName, the name of the OikoLab CSV weather file
%   timeSpan, the datetime span of length K
%
% Output:
%   w, a Kx1 vector of water thermal power withdrawals, kW

% read data
opts = detectImportOptions(fileName);
opts.PreserveVariableNames = 1;
waterData = readtimetable(fileName,opts);

% fix year to correspond to output time span
waterTime = waterData.Properties.RowTimes;
waterTime.Year = timeSpan(1).Year;
waterData.Properties.RowTimes = waterTime;

% extract event duration and volume flow rate
eventDuration = waterData{:,1}/60; % event duration, min
volumeFlowRate = waterData{:,2}; % volume flow rate, gal/min

% convert duration and volume to water mass
gallonsPerCubicMeter = 264.17; % gallons per cubic meter, gal/m^3
waterVolume = eventDuration.*volumeFlowRate/gallonsPerCubicMeter; % water volume, m^3
waterDensity = 997; % water density, kg/m^3
waterMass = waterDensity*waterVolume; % water mass, kg

% retime to the output time span
TT = timetable(waterTime,waterMass);
newTT = retime(TT,timeSpan,'sum'); % retime the data, summing if there are multiple events in a new time step
dt = hours(timeSpan(2) - timeSpan(1));
mdot = 1*newTT.waterMass/dt; % mass flow rate of hot water withdrawal, kg/h

% set tank inlet water temperature
K = length(timeSpan);
t = (0:dt:K*dt)';
inletTemperature = 10 + 5.5*sin(2*pi*(t(1:K)-125*24)/(365*24)); % water temperature at inlet to tank assuming t=0 on Jan 1, C

% set tank temperature
Tset = f2c(130); % water temperature setpoint, from Hendron NREL run, C

% calculate thermal power withdrawal
waterSpecificHeat = 0.001163056; % specific heat of water, kWh/kg/C
w = waterSpecificHeat*mdot.*(Tset - inletTemperature); % thermal power withdrawal, kW

end

